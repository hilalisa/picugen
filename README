Picugen is a cryptographic and non-cryptographic hash/checksum generator written in Go.
It can be used to easily obtain (optionally salted) hashes of strings and files produced
by a large variety of algorithms including MD5, SHA-1 and SHA-256.

Usage: ./picugen [-a <algorithm>] [-salt <salt>] -s <string to hash>/-f <file to hash>

Examples:
  ./picugen -a md5 document.txt                Generate MD5 hash of a file
  ./picugen -a md5 *                           Generate MD5 hash of all files in folder
  ./picugen -a sha1 -s hello world             Generate SHA-1 hash of a string
  ./picugen -a sha1 -salt s4lt -s hello world  Generate salted SHA-1 hash of a string

Available algorithms (default is MD5):
  adler32         Adler-32 checksum (RFC 1950)
  crc32           32-bit cyclic redundancy check (CRC-32) checksum (defaults to IEEE polynomial)
  crc32castagnoli CRC-32 using the Castagnoli polynomial (0x82f63b78)
  crc32ieee       CRC-32 using the IEEE polynomial (0xedb88320)
  crc32koopman    CRC-32 using the Koopman polynomial (0xeb31d82e)
  crc64           64-bit cyclic redundancy check (CRC-64) checksum (defaults to ISO polynomial)
  crc64ecma       CRC-64 using the ECMA polynomial (0xC96C5795D7870F42)
  crc64iso        CRC-64 using the ISO polynomial (0xD800000000000000)
  fnv             FNV-1 non-cryptographic hash (defaults to fnv32)
  fnv32           32-bit FNV-1
  fnv32a          32-bit FNV-1a
  fnv64           64-bit FNV-1
  fnv64a          64-bit FNV-1a
  hmac            Keyed-Hash Message Authentication Code (HMAC) (requires -k <key>) (defaults to SHA-256)
  hmacmd5         HMAC using MD5 (requires -k <key>)
  hmacsha1        HMAC using SHA-1 (requires -k <key>)
  hmacsha256      HMAC using SHA-256 (requires -k <key>)
  hmacsha512      HMAC using SHA-512 (requires -k <key>)
  md4             MD4 hash (RFC 1320)
  md5             MD5 hash (RFC 1321)
  ripemd160       RIPEMD-160 hash
  sha1            SHA-1 hash (RFC 3174)
  sha224          SHA-224 hash (FIPS 180-2)
  sha256          SHA-256 hash (FIPS 180-2)
  sha384          SHA-384 hash (FIPS 180-2)
  sha512          SHA-512 hash (FIPS 180-2)
